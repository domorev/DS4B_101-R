group_by(bikeshop_name) %>%
mutate(pct = total_qty / sum(total_qty)) %>% # calculates proportion of sales
ungroup() ->
customer_trends_tbl
customer_trends_tbl %>%
select(bikeshop_name, model, pct) %>%
pivot_wider(names_from = model, values_from = pct, values_fill = 0) ->
customer_product_tbl
# 2.0 MODELING: K-MEANS CLUSTERING
set.seed(seed)
customer_product_tbl %>%
select(-bikeshop_name) %>%
kmeans(centers = k, nstart = 100) -> kmeans_obj
kmeans_obj %>%
broom::augment(customer_product_tbl) %>%
select(bikeshop_name, .cluster) ->
kmeans_tbl
# 3.0 UMAP
# umap.defaults %>% View()
umap.defaults -> umap_config
umap_config$random_state <- seed
customer_product_tbl %>%
select(-bikeshop_name) %>%
as.matrix() %>%
umap(config = umap_config) %>%
pluck("layout") %>%
as_tibble() %>%
set_names(c("x","y")) %>%
bind_cols(
customer_product_tbl %>% select(bikeshop_name)
) ->
umap_tbl
# 4.0 COMBINE UMAP & K-MEANS
umap_tbl %>%
left_join(kmeans_tbl, by = "bikeshop_name") %>%
mutate(label_text = str_glue("Customer: {bikeshop_name}
Cluster: {.cluster}"))
}
get_customer_segments(k = 4, seed = 123)
get_customer_segments(k = k, seed = seed) -> combined_tbl
combined_tbl %>%
ggplot(aes(x, y))
combined_tbl %>%
ggplot(aes(x, y, color = .cluster)) +
# Geoms
geom_point()
combined_tbl %>%
ggplot(aes(x, y, color = .cluster)) +
# Geoms
geom_point() +
# Formatting
theme_tq() +
scale_color_tq()
combined_tbl %>%
ggplot(aes(x, y, color = .cluster)) +
# Geoms
geom_point() +
# Formatting
theme_tq() +
scale_color_tq() +
labs(
title = "Customer Segmentation: 2D Projection",
subtitle = "UMAP 2D Projection with K-Means Cluster Assignment"
) +
theme(legend.position = 'none')
combined_tbl %>%
ggplot(aes(x, y, color = .cluster)) +
# Geoms
geom_point(aes(text = label_text)) +
# Formatting
theme_tq() +
scale_color_tq() +
labs(
title = "Customer Segmentation: 2D Projection",
subtitle = "UMAP 2D Projection with K-Means Cluster Assignment"
) +
theme(legend.position = 'none') ->
g
if (interactive) (
ggplotly(g, tooltip = 'text')
) else {
}
g + geom_label_repel(aes(label = label_text))
g + geom_label_repel(aes(label = label_text, size = 2)
}
g + geom_label_repel(aes(label = label_text, size = 2))
g + geom_label_repel(aes(label = label_text), size = 2)
plot_customer_segments(k = 4, seed = 123, interactive = TRUE)
plot_customer_segments <- function(k = 4, seed = 123, interactive = TRUE) {
# DATA MANIPULATION
get_customer_segments(k = k, seed = seed) -> combined_tbl
# VISUALIZATION
combined_tbl %>%
ggplot(aes(x, y, color = .cluster)) +
# Geoms
geom_point(aes(text = label_text)) +
# Formatting
theme_tq() +
scale_color_tq() +
labs(
title = "Customer Segmentation: 2D Projection",
subtitle = "UMAP 2D Projection with K-Means Cluster Assignment"
) +
theme(legend.position = 'none') ->
g
# INTERACTIVE VS STATIC
if (interactive) (
ggplotly(g, tooltip = 'text')
) else {
g + geom_label_repel(aes(label = label_text), size = 2)
}
}
plot_customer_segments(k = 4, seed = 123, interactive = TRUE)
plot_customer_segments(k = 4, seed = 123, interactive = FALSE)
function_names <- c("get_customer_segments", "plot_customer_segments",
"plot_customer_heatmap", "plot_customer_behavior_by_cluster")
dump(function_names, file = "00_scripts/plot_customer_segmentation.R")
plot_customer_behavior_by_cluster(top_n_products = 10,
k = 4, seed = 123,
interactive = TRUE)
plot_customer_behavior_by_cluster <- function(top_n_products = 10,
k = 4, seed = 123,
interactive = TRUE) {
# DATA MANIPULATION
# VISUALIZATION
# INTERACTIVE VS STATIC
}
function_names <- c("get_customer_segments", "plot_customer_segments",
"plot_customer_heatmap", "plot_customer_behavior_by_cluster")
dump(function_names, file = "00_scripts/plot_customer_segmentation.R")
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
out.width = "100%",
fig.align = "center")
# PLOT CUSTOMER SEGMENTS
plot_customer_segments(k = 4, seed = 123, interactive = params$interactive)
get_customer_segments(k = k, seed = seed)
bike_orderlines_tbl %>%
select(bikieshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price))
bike_orderlines_tbl
bike_orderlines_tbl %>%
select(bikieshop_name, model, category_1, category_2, price, quantity)
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price))
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup()
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup() %>%
group_by(bikeshop_name) %>%
arrange(desc(total_qty))
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup() %>%
group_by(bikeshop_name) %>%
arrange(desc(total_qty, .by_group = TRUE))
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup() %>%
group_by(bikeshop_name) %>%
arrange(desc(total_qty), .by_group = TRUE)
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup() %>%
group_by(bikeshop_name) %>%
arrange(desc(total_qty), .by_group = F)
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup() %>%
group_by(bikeshop_name) %>%
arrange(desc(total_qty), .by_group = TRUE)
top_n_products = 10
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup() %>%
group_by(bikeshop_name) %>%
arrange(desc(total_qty), .by_group = TRUE) %>%
slice(1:top_n_products)
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup() %>%
group_by(bikeshop_name) %>%
arrange(desc(total_qty), .by_group = TRUE) %>%
slice(1:top_n_products) %>%
ungroup() %>%
left_join(
combined_tbl %>% select(bikeshop_name, .cluster), by = "bikeshop_name"
) %>%
mutate(label_text = str_glue("Bike Shop: {bikeshop_name}
Model: {model}
Category 1: {category_1}
Category 2: {category_2}
Price: {scales::dollar(price)}"))
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup() %>%
group_by(bikeshop_name) %>%
arrange(desc(total_qty), .by_group = TRUE) %>%
slice(1:top_n_products) %>%
ungroup() %>%
left_join(
combined_tbl %>% select(bikeshop_name, .cluster), by = "bikeshop_name"
) %>%
mutate(label_text = str_glue("Bike Shop: {bikeshop_name}
Model: {model}
Category 1: {category_1}
Category 2: {category_2}
Price: {scales::dollar(price)}")) ->
top_n_tbl
top_n_tbl
top_n_tbl %>%
ggplot(aes(category_1, price))
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin()
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter()
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.1)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.5)
?geom_jitter
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin(aes(size = 0.5)) +
geom_jitter(width = 0.1, alpha = 0.5)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin()
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.5, aes(size = 0.1))
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.5, aes(size = 0.01))
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.5, size = 0.1)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.5, size = 0.5)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.5, size = 1)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.5)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5) +
facet_wrap(~ .cluster)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5) +
facet_wrap(~ .cluster, ncol = 2)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5) +
facet_wrap(~ .cluster, ncol = 2) +
# Formatting
theme_tq() +
theme(strip.text.x = element_text(margin = margin(5, 5, 5, 5, unit = 'pt')))
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5) +
facet_wrap(~ .cluster, ncol = 2) +
# Formatting
theme_tq() +
theme(strip.text.x = element_text(margin = margin(5, 5, 5, 5, unit = 'pt'))) +
scale_color_tq()
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5) +
facet_wrap(~ .cluster, ncol = 2) +
# Formatting
theme_tq() +
theme(strip.text.x = element_text(margin = margin(5, 5, 5, 5, unit = 'pt'))) +
scale_color_tq() +
scale_y_log10()
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5) +
facet_wrap(~ .cluster, ncol = 2) +
# Formatting
theme_tq() +
theme(strip.text.x = element_text(margin = margin(5, 5, 5, 5, unit = 'pt'))) +
scale_color_tq() +
scale_y_log10(labels = scales::dollar_format(accuracy = 1))
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5) +
facet_wrap(~ .cluster, ncol = 2) +
# Formatting
theme_tq() +
theme(strip.text.x = element_text(margin = margin(5, 5, 5, 5, unit = 'pt'))) +
scale_color_tq() +
scale_y_log10(labels = scales::dollar_format(accuracy = 1)) +
labs(
title = str_glue("Top {top_n_products} Bike Models by Cluster"),
x = "Category 1",
y = "Price"
)
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5) +
facet_wrap(~ .cluster, ncol = 2) +
# Formatting
theme_tq() +
theme(strip.text.x = element_text(margin = margin(5, 5, 5, 5, unit = 'pt'))) +
scale_color_tq() +
scale_y_log10(labels = scales::dollar_format(accuracy = 1)) +
labs(
title = str_glue("Top {top_n_products} Bike Models by Cluster"),
x = "Category 1",
y = "Unit Price (Log Scale)"
)
g
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5) +
facet_wrap(~ .cluster, ncol = 2) +
# Formatting
theme_tq() +
theme(strip.text.x = element_text(margin = margin(5, 5, 5, 5, unit = 'pt'))) +
scale_color_tq() +
scale_y_log10(labels = scales::dollar_format(accuracy = 1)) +
labs(
title = str_glue("Top {top_n_products} Bike Models by Cluster"),
x = "Category 1",
y = "Unit Price (Log Scale)"
) ->
g
g
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5, aes(text = label_text)) +
facet_wrap(~ .cluster, ncol = 2) +
# Formatting
theme_tq() +
theme(strip.text.x = element_text(margin = margin(5, 5, 5, 5, unit = 'pt'))) +
scale_color_tq() +
scale_y_log10(labels = scales::dollar_format(accuracy = 1)) +
labs(
title = str_glue("Top {top_n_products} Bike Models by Cluster"),
x = "Category 1",
y = "Unit Price (Log Scale)"
) ->
g
ggplotly(g, tooltip = "text")
plot_customer_behavior_by_cluster <- function(top_n_products = 10,
k = 4, seed = 123,
interactive = TRUE) {
# DATA MANIPULATION
get_customer_segments(k = k, seed = seed) ->
combined_tbl
bike_orderlines_tbl %>%
select(bikeshop_name, model, category_1, category_2, price, quantity) %>%
group_by_at(.vars = vars(bikeshop_name:price)) %>%
summarise(total_qty = sum(quantity)) %>%
ungroup() %>%
group_by(bikeshop_name) %>%
arrange(desc(total_qty), .by_group = TRUE) %>%
slice(1:top_n_products) %>%
ungroup() %>%
left_join(
combined_tbl %>% select(bikeshop_name, .cluster), by = "bikeshop_name"
) %>%
mutate(label_text = str_glue("Bike Shop: {bikeshop_name}
Model: {model}
Category 1: {category_1}
Category 2: {category_2}
Price: {scales::dollar(price)}")) ->
top_n_tbl
# VISUALIZATION
top_n_tbl %>%
ggplot(aes(category_1, price, color = .cluster)) +
# Geoms
geom_violin() +
geom_jitter(width = 0.2, alpha = 0.5, aes(text = label_text)) +
facet_wrap(~ .cluster, ncol = 2) +
# Formatting
theme_tq() +
theme(strip.text.x = element_text(margin = margin(5, 5, 5, 5, unit = 'pt'))) +
scale_color_tq() +
scale_y_log10(labels = scales::dollar_format(accuracy = 1)) +
labs(
title = str_glue("Top {top_n_products} Bike Models by Cluster"),
x = "Category 1",
y = "Unit Price (Log Scale)"
) ->
g
g
# INTERACTIVE VS STATIC
if (interactive) {
ggplotly(g, tooltip = "text")
} else {
return(g)
}
}
plot_customer_behavior_by_cluster(top_n_products = 10,
k = 4, seed = 123,
interactive = TRUE)
plot_customer_behavior_by_cluster(top_n_products = 5,
k = 4, seed = 123,
interactive = TRUE)
plot_customer_behavior_by_cluster(top_n_products = 3,
k = 4, seed = 123,
interactive = TRUE)
plot_customer_behavior_by_cluster(top_n_products = 20,
k = 4, seed = 123,
interactive = TRUE)
plot_customer_behavior_by_cluster(top_n_products = 5,
k = 4, seed = 123,
interactive = TRUE)
plot_customer_behavior_by_cluster(top_n_products = 5,
k = 3, seed = 123,
interactive = TRUE)
plot_customer_behavior_by_cluster(top_n_products = 5,
k = 4, seed = 123,
interactive = TRUE)
plot_customer_behavior_by_cluster(top_n_products = 10,
k = 4, seed = 123,
interactive = FALSE)
plot_customer_behavior_by_cluster(top_n_products = 10,
k = 4, seed = 123,
interactive = TRUE)
function_names <- c("get_customer_segments", "plot_customer_segments",
"plot_customer_heatmap", "plot_customer_behavior_by_cluster")
dump(function_names, file = "00_scripts/plot_customer_segmentation.R")
# PLOT CUSTOMER BEHAVIOR
plot_customer_behavior_by_cluster(top_n_products = 5, k = 4, seed = 123, interactive = params$interactive)
library(tidyverse)
## Data Types ----
?c
a <- c(1, 2, 3)
a %>% class()
b <- c("low", "medium", "high")
b %>% class()
ab_tbl <- tibble(a, b)
ab_tbl
